{"mappings":"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","sources":["../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/semver/index.js","../node_modules/semver/internal/re.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/classes/semver.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/valid.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/lru-cache/index.js","../node_modules/yallist/yallist.js","../node_modules/yallist/iterator.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/valid.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/@ledgerhq/logs/src/index.ts"],"sourcesContent":["import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n"],"names":["_hwTransport","require","_hidFraming","_devices","_logs","_errors","ledgerDevices","vendorId","ledgerUSBVendorId","isSupported","Promise","resolve","window","navigator","hid","getHID","TransportError","requestLedgerDevices","requestDevice","filters","device","_a","sent","Array","isArray","getLedgerDevices","getDevices","filter","d","TransportWebHID","_super","TransportWebHID1","_this1","call","this","channel","Math","floor","random","packetSize","inputs","read","length","shift","success","inputCallback","onInputReport","e","buffer","Buffer","from","data","push","_disconnectEmitted","_emitDisconnect","emit","exchange","apdu","__awaiter","exchangeAtomicImpl","_this","log","toString","framing","_hidFramingDefault","default","blocks","makeBlocks","i","sendReport","_b","result","getReducedResult","acc","reduceResponse","message","includes","DisconnectedDeviceDuringOperation","_a1","deviceModel","productId","identifyUSBProductId","undefined","addEventListener","__extends","request","__read","apply","open","openConnected","devices","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","list","listen","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","next","type","descriptor","complete","error","TransportOpenUserCancelled","unsubscribe","_hwTransportDefault","errors_1","initialAcc","alloc","dataLength","sequence","exports","value","b","concat","writeUInt16BE","blockSize","nbBlocks","ceil","fill","head","writeUInt8","chunk","slice","readUInt16BE","readUInt8","chunkData","IIGenericHID","IIKeyboardHID","IIU2F","IICCID","IIWebUSB","DeviceModelId","getDeviceModel","identifyTargetId","identifyProductName","getBluetoothServiceUuids","getInfosForServiceUuid","DeviceModelId1","_semver","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","_semverDefault","lt","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","productMap","Blue","devicesList","Object","values","id1","info","Error","targetId","find","_a2","mask","usbProductId","legacy","mm","bluetoothServices","serviceUuidToInfos","spec","replace","__assign","uuid","toLowerCase","internalRe","module","re","src","tokens","t","SEMVER_SPEC_VERSION","SemVer","compareIdentifiers","rcompareIdentifiers","parse","valid","clean","inc","diff","major","minor","patch","prerelease","compare","rcompare","compareLoose","compareBuild","sort","rsort","gt","eq","neq","gte","lte","cmp","Comparator","Range","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","intersects","simplifyRange","subset","MAX_SAFE_COMPONENT_LENGTH","debug","R","createToken","name","isGlobal","index","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","MAX_SAFE_INTEGER","Number","MAX_LENGTH","process","env","parseOptions","constructor","version","options","loose","includePrerelease","TypeError","m","trim","match","LOOSE","FULL","raw","split","map","test","num","build","format","join","other","compareMain","comparePre","a","release","identifier","isNaN","opts","k","reduce","o","numeric","anum","bnum","er","v","s","version1","version2","v1","v2","hasPre","prefix","defaultResult","key","parsed","versionA","versionB","op","String","rtl","COERCERTL","exec","lastIndex","ANY","Symbol","comp","semver","operator","r","COMPARATORLOOSE","COMPARATOR","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","set","parseRange","c","first","isNullSet","isAny","comps","memoKey","keys","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","rangeList","TILDETRIM","CARETTRIM","parseComparator","replaceGTE0","rangeMap","Map","comparators","comp1","size","has","delete","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","max","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","allowed","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","self","doUse","node","hit","isStale","del","now","Date","unshiftNode","maxAge","walker","tail","prev","removeNode","Entry","forEachStep","fn","thisp","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","toArray","dump","h","dumpLru","len","item","unshift","peek","load","arr","l","expiresAt","prune","arguments","insert","inserted","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","nodes","reverse","iterator","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","r1","r2","ranges","simplified","original","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","c1","sawNonNull","OUTER","simpleSub","simpleDom","isSub","parcelHelpers","subscribers","obj","date","log1","console","dispatch","cb","indexOf","__ledgerLogsListen"],"version":3,"file":"TransportWebHID.8f15c93d.js.map"}